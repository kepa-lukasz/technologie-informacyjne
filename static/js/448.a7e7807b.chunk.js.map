{"version":3,"file":"static/js/448.a7e7807b.chunk.js","mappings":"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","sources":["pages/home/whyUs/contact-cardModule.js","pages/home/whyUs/contact-cards.js","pages/home/services/serviceModule.js","pages/home/services/services.js","pages/home/top/top.js","pages/home/main/home-code.js","pages/home/products/products.js","pages/home/main/home.js","pages/home/main/home-lang|sync|/^/.*/.json$","pages/home/services/lang-services|sync|/^/.*/.json$"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Col, Row } from \"react-bootstrap\"\r\nimport \"./why_us_cards.css\"\r\n\r\nexport default function ContactCardModule({ color, title, icon, svg, desc }) {\r\n    return (\r\n        <div className=\"m-0 p-2 col-12 col-md-6 col-xl-4\" data-aos=\"fade-up\">\r\n            <Col style={{\"--card-shadow-color\" : svg}} className={\" aboutCard  w-100 h-100\"}  >\r\n                <Row style={{ zIndex: '4', position: 'relative' }}>\r\n                    <div className=\"svg-shadow\">\r\n                        <svg className=\"cardWave\" width=\"429\" height=\"170\" viewBox=\"0 0 429 170\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                            <g filter=\"url(#filter0_f_817_345)\">\r\n                                <path d=\"M573.801 251.82L280.765 135.836C221.435 106.848 100.029 50.7659 89.0434 58.3451C75.3114 67.8191 108.128 122.846 127.072 134.729C146.016 146.612 310.116 224.601 320.502 221.959C328.81 219.845 482.156 274.862 557.79 302.635L573.801 251.82Z\" fill={svg} />\r\n                            </g>\r\n                            <defs>\r\n                                <filter id=\"filter0_f_817_345\" x=\"0.776489\" y=\"-27.3522\" width=\"658.024\" height=\"414.987\" filterUnits=\"userSpaceOnUse\" color-interpolation-filters=\"sRGB\">\r\n                                    <feFlood flood-opacity=\"0\" result=\"BackgroundImageFix\" />\r\n                                    <feBlend mode=\"normal\" in=\"SourceGraphic\" in2=\"BackgroundImageFix\" result=\"shape\" />\r\n                                    <feGaussianBlur stdDeviation=\"42.5\" result=\"effect1_foregroundBlur_817_345\" />\r\n                                </filter>\r\n                            </defs>\r\n                        </svg>\r\n\r\n                    </div>\r\n                    <Col md={\"auto\"}>\r\n                        {icon}\r\n                    </Col>\r\n\r\n                    <Col sm={12} lg={7} xl={8} xxl={9} >\r\n                        <p className=\"fw-bold\" style={{ fontSize: '0.9rem', color: `#${color}` }}>{title}</p>\r\n                        <p style={{ fontSize: '0.8rem', position: \"relative\", zIndex: \"100\" }} className=\"m-0\">{desc}</p>\r\n                    </Col>\r\n\r\n                </Row>\r\n            </Col>\r\n        </div>\r\n    )\r\n\r\n}","import { Row, Col } from \"react-bootstrap\"\r\nimport ContactCardModule from \"./contact-cardModule\"\r\nimport \"../main/home.css\"\r\nimport { useState } from \"react\"\r\nimport \"./why_us_cards.css\"\r\nconst ContactCards = ({ lang }) => {\r\n    const [svg_size] = useState(\"64\")\r\n    return (\r\n\r\n\r\n        <Row className=\"d-flex my-4 justify-content-center\">\r\n            <ContactCardModule\r\n                color=\"#99BCFF\"\r\n                desc={lang[0].content}\r\n                title={lang[0].title}\r\n                icon={<svg width={svg_size} height={svg_size} viewBox=\"0 0 72 73\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                    <rect y=\"0.25\" width=\"72\" height=\"72\" rx=\"5\" fill=\"#BCFF4F\" />\r\n                    <path d=\"M36 53.5C45.625 53.5 53.5 45.625 53.5 36L58.75 43\" stroke=\"black\" stroke-width=\"2\" stroke-miterlimit=\"10\" stroke-linejoin=\"round\" />\r\n                    <path d=\"M36 18.5C26.375 18.5 18.5 26.375 18.5 36L13.25 29\" stroke=\"black\" stroke-width=\"2\" stroke-miterlimit=\"10\" stroke-linejoin=\"round\" />\r\n                    <path d=\"M30.75 44.75H16.75V53.5H30.75V44.75Z\" stroke=\"black\" stroke-width=\"2\" stroke-miterlimit=\"10\" stroke-linejoin=\"round\" />\r\n                    <path d=\"M34.25 58.75H13.25L16.75 53.5H30.75L34.25 58.75Z\" stroke=\"black\" stroke-width=\"2\" stroke-miterlimit=\"10\" stroke-linejoin=\"round\" />\r\n                    <path d=\"M48.25 30.75C53.0825 30.75 57 26.8325 57 22C57 17.1675 53.0825 13.25 48.25 13.25C43.4175 13.25 39.5 17.1675 39.5 22C39.5 26.8325 43.4175 30.75 48.25 30.75Z\" stroke=\"black\" stroke-width=\"2\" stroke-miterlimit=\"10\" stroke-linejoin=\"round\" />\r\n                    <path d=\"M48.25 30.75C50.183 30.75 51.75 26.8325 51.75 22C51.75 17.1675 50.183 13.25 48.25 13.25C46.317 13.25 44.75 17.1675 44.75 22C44.75 26.8325 46.317 30.75 48.25 30.75Z\" stroke=\"black\" stroke-width=\"2\" stroke-miterlimit=\"10\" stroke-linejoin=\"round\" />\r\n                </svg>\r\n                }\r\n                svg=\"#BCFF4F\"\r\n            />\r\n\r\n\r\n\r\n            <ContactCardModule color=\"#FFB82E\"\r\n                desc={lang[1].content}\r\n                title={lang[1].title}\r\n                icon={<svg width={svg_size} height={svg_size} viewBox=\"0 0 72 72\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                    <rect width=\"72\" height=\"72\" rx=\"5\" fill=\"#FFB82E\" />\r\n                    <g clip-path=\"url(#clip0_175_189)\">\r\n                        <path d=\"M9 25.8748C9.00082 29.7804 10.3558 33.5649 12.834 36.5834C15.3123 39.602 18.7605 41.6679 22.5911 42.4292C22.8093 40.0111 23.4298 37.6465 24.4271 35.4328C21.4706 34.4338 19.5705 32.1658 19.125 28.9461H17.4375V27.5083H19.0103V26.0436C19.0103 25.8883 19.0103 25.7297 19.0238 25.588H17.4375V24.1468H19.1621C19.9215 19.9348 23.2189 17.4373 28.1734 17.4373C29.2399 17.4373 30.1646 17.542 30.9375 17.7242V20.1981C30.0348 19.9973 29.1115 19.9044 28.1869 19.9213C25.0852 19.9213 22.9961 21.4941 22.3346 24.1468H28.8045V25.588H22.122C22.1119 25.7432 22.1119 25.9153 22.1119 26.0841V27.5083H28.8045V28.9495H22.2638C22.662 30.9812 23.8433 32.4257 25.6556 33.0973C27.4327 30.1542 29.8766 27.6699 32.7903 25.845C35.7039 24.02 39.0058 22.9053 42.4294 22.591C41.6017 18.4921 39.2821 14.8462 35.9201 12.3597C32.5581 9.87315 28.3929 8.72288 24.2312 9.13169C20.0696 9.54049 16.2079 11.4793 13.394 14.5725C10.58 17.6657 9.0143 21.6932 9 25.8748ZM63 44.4373C63 49.3604 61.0443 54.0819 57.5632 57.563C54.082 61.0442 49.3606 62.9998 44.4375 62.9998C39.5144 62.9998 34.793 61.0442 31.3118 57.563C27.8307 54.0819 25.875 49.3604 25.875 44.4373C25.875 39.5143 27.8307 34.7928 31.3118 31.3117C34.793 27.8305 39.5144 25.8748 44.4375 25.8748C49.3606 25.8748 54.082 27.8305 57.5632 31.3117C61.0443 34.7928 63 39.5143 63 44.4373ZM36.8438 48.8991C37.0766 51.7172 39.3615 53.911 43.4722 54.1708V56.2498H45.2948V54.1573C49.5439 53.8671 52.0312 51.6598 52.0312 48.4536C52.0312 45.5342 50.1311 44.0323 46.7325 43.2561L45.2948 42.9186V37.2621C47.1172 37.4646 48.2783 38.4332 48.555 39.7765H51.7545C51.5182 37.063 49.1254 34.9401 45.2948 34.7072V32.6248H43.4722V34.7477C39.8407 35.0953 37.3703 37.2182 37.3703 40.222C37.3703 42.8781 39.2062 44.569 42.264 45.2608L43.4722 45.5477V51.5552C41.6025 51.2852 40.3673 50.2862 40.0871 48.8991H36.8438ZM43.4588 42.5035C41.6632 42.0985 40.6913 41.275 40.6913 40.033C40.6913 38.6492 41.7409 37.6063 43.4722 37.3026V42.5001H43.4554L43.4588 42.5035ZM45.558 46.027C47.7349 46.5163 48.7406 47.3095 48.7406 48.7135C48.7406 50.3132 47.4919 51.4135 45.2981 51.616V45.9662L45.558 46.027Z\" fill=\"#27282C\" />\r\n                    </g>\r\n                    <defs>\r\n                        <clipPath id=\"clip0_175_189\">\r\n                            <rect width=\"54\" height=\"54\" fill=\"white\" transform=\"translate(9 9)\" />\r\n                        </clipPath>\r\n                    </defs>\r\n                </svg>\r\n\r\n\r\n                }\r\n                svg=\"#FFB82E\"\r\n            />\r\n            <ContactCardModule\r\n                color=\"#99BCFF\"\r\n                desc={lang[2].content}\r\n                title={lang[2].title}\r\n                icon={<svg width=\"72\" height=\"73\" viewBox=\"0 0 72 73\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                    <rect y=\"0.75\" width=\"72\" height=\"72\" rx=\"5\" fill=\"#FF4FD8\" />\r\n                    <path d=\"M41.25 23.5833C41.25 19.073 44.9063 15.4166 49.4166 15.4166C53.927 15.4166 57.5833 19.073 57.5833 23.5833V50.4166C57.5833 54.9269 53.927 58.5833 49.4166 58.5833C44.9063 58.5833 41.25 54.9269 41.25 50.4166V23.5833Z\" stroke=\"black\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                    <path d=\"M49.4166 15.4167C53.927 15.4167 57.5833 19.073 57.5833 23.5833C57.5833 28.0937 53.927 31.75 49.4166 31.75L22.5833 31.75C18.073 31.75 14.4166 28.0937 14.4166 23.5833C14.4166 19.073 18.073 15.4167 22.5833 15.4167L49.4166 15.4167Z\" stroke=\"black\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                    <path d=\"M43.6421 17.8555C46.8314 14.6663 52.0022 14.6663 55.1915 17.8555C58.3808 21.0448 58.3808 26.2157 55.1915 29.405L36.2174 48.379C33.0282 51.5683 27.8573 51.5683 24.668 48.379C21.4788 45.1897 21.4788 40.0189 24.668 36.8296L43.6421 17.8555Z\" stroke=\"black\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                </svg>\r\n                }\r\n                svg=\"#FF4FD8\"\r\n            />\r\n            <ContactCardModule\r\n                color=\"#99BCFF\"\r\n                desc={lang[3].content}\r\n                title={lang[3].title}\r\n                icon={<svg width={svg_size} height={svg_size} viewBox=\"0 0 72 72\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                    <rect width=\"72\" height=\"72\" rx=\"5\" fill=\"#B04FFF\" />\r\n                    <g clip-path=\"url(#clip0_817_269)\">\r\n                        <path d=\"M11.1094 29.4187V39.7969H12.7125C13.5984 39.7969 14.6109 39.5437 14.9906 39.2484C15.8344 38.6156 20.475 23.5969 20.3063 22.1203C20.2219 21.2766 19.7578 20.9391 18.0703 20.3484C16.9313 19.9688 14.8641 19.5047 13.5563 19.3359L11.1094 19.0406V29.4187Z\" fill=\"#27282C\" />\r\n                        <path d=\"M34.4391 22.3313C32.3719 23.3438 29.7562 25.7907 28.6594 27.6891C27.0984 30.4313 26.9719 31.1907 27.9844 32.2032C29.0812 33.3001 30.5156 33.0048 32.7516 31.2329C33.6375 30.5579 35.0719 29.7141 35.9156 29.4188C37.3922 28.9126 37.5609 28.9548 38.7422 30.0516C39.4594 30.6844 42.2859 33.2579 45.0703 35.7891C47.8547 38.3204 50.5547 40.7251 51.0187 41.1891C51.9469 41.9485 51.9469 41.9485 53.2547 40.7673L54.5203 39.586L52.0734 32.9204C50.6812 29.2501 49.5 26.1704 49.4156 26.1282C49.3734 26.0438 46.8 25.0313 43.7625 23.8079C37.8141 21.4876 36.5484 21.3188 34.4391 22.3313Z\" fill=\"#27282C\" />\r\n                        <path d=\"M56.8828 21.9094C52.5375 22.7953 50.7656 23.5125 50.5547 24.3562C50.2594 25.4953 55.9969 41.1047 56.9672 41.7797C57.3469 42.075 58.4016 42.3281 59.2875 42.3281H60.8906V31.9922V21.6562L59.3297 21.6984C58.4437 21.7406 57.3469 21.825 56.8828 21.9094Z\" fill=\"#27282C\" />\r\n                        <path d=\"M21.0234 24.6938C20.9391 24.9891 20.0531 27.9 19.0828 31.1063L17.3109 37.0125L22.3313 41.8641C29.0391 48.361 35.3672 53.2125 36.3375 52.5797C37.8563 51.6516 37.4344 50.3438 34.9031 47.7704C33.5531 46.4204 32.5828 45.1547 32.7516 44.986C32.9203 44.8172 34.4391 46.0407 36.1266 47.7282C39.375 50.9766 40.5563 51.3985 41.6531 49.8797C42.4969 48.6563 41.9063 47.5172 38.9953 44.6485C37.8141 43.5094 36.8438 42.286 36.8438 41.9485C36.8438 41.611 38.5313 42.961 40.5984 44.986C42.6656 47.011 44.5219 48.6563 44.6906 48.6563C44.9016 48.6563 45.5344 48.361 46.0406 47.9813C47.6859 46.8422 47.2219 45.7032 43.5094 42.2438C41.1469 40.0079 40.1766 38.8266 40.4719 38.5313C40.725 38.2782 42.075 39.3329 44.6484 41.9063C47.1375 44.3954 48.7406 45.7032 49.3734 45.7032C50.5969 45.7032 51.6938 44.1422 51.1875 43.1719C50.9766 42.75 47.7281 39.6282 44.0156 36.211L37.2234 29.9672L35.4516 30.8954C34.4813 31.4016 33.0469 32.2875 32.2453 32.836C30.4734 34.1438 28.3219 34.2282 27.1406 33.0469C25.6219 31.5282 26.2969 28.6172 28.8281 25.7485L30.1781 24.1875H25.7063C22.5 24.1875 21.15 24.3563 21.0234 24.6938Z\" fill=\"#27282C\" />\r\n                    </g>\r\n                    <defs>\r\n                        <clipPath id=\"clip0_817_269\">\r\n                            <rect width=\"54\" height=\"54\" fill=\"white\" transform=\"translate(9 9)\" />\r\n                        </clipPath>\r\n                    </defs>\r\n                </svg>\r\n                }\r\n                svg=\"#B04FFF\"\r\n            />\r\n            <ContactCardModule\r\n                color=\"#99BCFF\"\r\n                desc={lang[4].content}\r\n                title={lang[4].title}\r\n                icon={<svg width={svg_size} height={svg_size} viewBox=\"0 0 72 72\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                    <rect width=\"72\" height=\"72\" rx=\"5\" fill=\"#FF4F4F\" />\r\n                    <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M57.2718 35.8226C57.9269 36.4776 58.2948 37.3693 58.2948 38.2972V54.7892C58.2948 56.7206 56.7308 58.2857 54.7976 58.2892L38.2982 58.2962C37.3718 58.2962 36.481 57.927 35.8211 57.2708L23.2794 44.7278C22.5108 48.3909 22.0883 52.4836 22.0883 57.0245C22.0883 57.6689 21.5659 58.1912 20.9216 58.1912C20.2772 58.1912 19.7549 57.6689 19.7549 57.0245C19.7549 51.7127 20.3161 46.9706 21.3281 42.7762L12.6942 34.1415C11.3249 32.7757 11.3249 30.556 12.6931 29.1912L29.1899 12.6922C30.5578 11.3243 32.7735 11.3243 34.1414 12.6922L51.9967 30.5475C52.3306 29.7007 52.6277 28.8569 52.8792 28.0296C54.929 21.2873 53.7371 17.474 48.9648 17.474C47.2104 17.474 45.5391 17.7 43.9517 18.1329C43.3301 18.3025 42.6887 17.936 42.5192 17.3143C42.3496 16.6927 42.7161 16.0514 43.3378 15.8818C45.1243 15.3946 47.0021 15.1407 48.9648 15.1407C55.8091 15.1407 57.5464 20.6994 55.1116 28.7084C54.7493 29.8999 54.3006 31.1208 53.7864 32.3371L57.2718 35.8226ZM22.0321 40.1803L14.3431 32.4906C13.8867 32.0353 13.8867 31.2964 14.342 30.8422L30.8398 14.3421C31.2965 13.8854 32.0348 13.8854 32.4915 14.3421L51.0018 32.8523C48.9014 37.3385 45.9821 41.546 43.5905 43.3704C43.0782 43.7613 42.9796 44.4933 43.3705 45.0056C43.7613 45.5179 44.4934 45.6164 45.0057 45.2257C47.5761 43.2647 50.5353 39.1169 52.7515 34.6021L55.6219 37.4725C55.8385 37.6891 55.9615 37.9871 55.9615 38.2972V54.7892C55.9615 55.4331 55.4402 55.9547 54.7951 55.9558L38.2977 55.9628C37.9897 55.9628 37.6901 55.8387 37.4689 55.6187L23.9181 42.0664C24.5048 39.9051 25.2198 37.9104 26.0443 36.0779C26.9006 34.175 27.8139 32.5917 28.7219 31.3137C29.254 30.5647 29.6557 30.0929 29.8642 29.8845C30.3198 29.4289 30.3198 28.6901 29.8642 28.2346C29.4086 27.779 28.6699 27.779 28.2143 28.2346C27.9154 28.5333 27.4293 29.1045 26.8198 29.9623C25.8252 31.3622 24.836 33.077 23.9164 35.1206C23.2072 36.6967 22.5757 38.3827 22.0321 40.1803ZM44.2981 47.798C46.2297 47.798 47.7981 46.2297 47.7981 44.298C47.7981 43.6537 48.3204 43.1314 48.9648 43.1314C49.6091 43.1314 50.1314 43.6537 50.1314 44.298C50.1314 47.5184 47.5184 50.1314 44.2981 50.1314C41.0777 50.1314 38.4648 47.5184 38.4648 44.298C38.4648 41.0777 41.0777 38.4647 44.2981 38.4647C44.9424 38.4647 45.4648 38.987 45.4648 39.6314C45.4648 40.2757 44.9424 40.798 44.2981 40.798C42.3664 40.798 40.7981 42.3664 40.7981 44.298C40.7981 46.2297 42.3664 47.798 44.2981 47.798Z\" fill=\"black\" />\r\n                </svg>\r\n\r\n                }\r\n                svg=\"#FF4F4F\"\r\n            />\r\n            <ContactCardModule\r\n                color=\"#99BCFF\"\r\n                desc={lang[5].content}\r\n                title={lang[5].title}\r\n                icon={<svg width={svg_size} height={svg_size} viewBox=\"0 0 72 72\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                    <rect width=\"72\" height=\"72\" rx=\"5\" fill=\"#99BCFF\" />\r\n                    <path d=\"M35.1359 8.85196C34.0221 8.9884 33.1783 9.46597 30.7706 11.2739C28.588 12.9113 28.0592 13.241 27.1479 13.4912C26.9116 13.5594 25.4603 13.6958 23.9077 13.7868C20.735 13.9801 20.0487 14.1279 18.9574 14.8443C18.1136 15.3901 17.4273 16.1746 16.9885 17.0729C16.7747 17.5164 16.4147 18.7558 16.0209 20.4386C15.6834 21.9054 15.3009 23.3268 15.1884 23.5883C14.7946 24.4866 14.3108 25.0551 12.3195 26.9313C10.1706 28.9439 9.58553 29.6943 9.2255 30.8883C8.95549 31.7411 8.92173 33.2761 9.158 34.1403C9.23675 34.4586 9.83304 35.789 10.4856 37.0966C11.7007 39.5413 11.9707 40.2349 12.0944 41.1332C12.1394 41.4402 12.0382 42.6455 11.8694 44.0896C11.7007 45.4313 11.5657 46.9663 11.5657 47.5008C11.5657 49.1154 12.1282 50.4344 13.3095 51.5601C14.1083 52.3219 14.3446 52.447 16.9885 53.584C19.3849 54.6188 19.8462 54.8689 20.5437 55.4829C20.78 55.6876 21.6913 56.9611 22.5801 58.3256C23.6489 59.9516 24.3915 60.9636 24.7853 61.3275C25.9666 62.4077 27.7442 62.9648 29.2855 62.7488C29.6793 62.6919 31.1082 62.3053 32.4695 61.8732C34.7759 61.1569 35.0009 61.1114 36.0022 61.1114C37.0035 61.1114 37.2286 61.1569 39.5462 61.8732C40.9076 62.3053 42.3364 62.6919 42.7302 62.7488C44.2603 62.9762 46.0379 62.4077 47.2305 61.3161C47.6242 60.9522 48.3555 59.963 49.4356 58.3142C50.3132 56.9611 51.2245 55.6876 51.4607 55.4829C52.147 54.8803 52.5971 54.6415 55.016 53.584C57.6711 52.4356 57.9074 52.3105 58.695 51.5601C59.8763 50.4344 60.4388 49.1154 60.4388 47.5008C60.4388 46.9663 60.3038 45.4313 60.135 44.0896C59.9663 42.6455 59.865 41.4402 59.91 41.1332C60.0338 40.2235 60.3151 39.5299 61.5076 37.1307C62.1489 35.8345 62.7565 34.5041 62.8465 34.1744C63.0602 33.3671 63.049 31.7752 62.824 31.002C62.4977 29.8649 62.0252 29.2054 60.4838 27.7158C57.6486 24.9869 57.3224 24.623 56.9511 23.8498C56.7261 23.3723 56.3773 22.1783 55.9723 20.4386C55.5785 18.7444 55.2297 17.5164 55.016 17.0729C54.5772 16.1746 53.8909 15.3901 53.0583 14.8443C51.9445 14.1166 51.3032 13.9801 48.0855 13.7868C45.8129 13.6504 45.0928 13.5708 44.5303 13.3775C43.6415 13.0818 43.6865 13.1159 41.1776 11.2284C39.0624 9.63653 38.3199 9.18171 37.5211 8.97703C36.8235 8.7951 35.901 8.74962 35.1359 8.85196ZM38.0274 17.3799C43.529 18.0622 48.243 20.9731 51.2582 25.5554C54.3634 30.2856 55.1622 36.096 53.4296 41.5084C52.9796 42.9411 51.7983 45.2949 50.8869 46.5911C49.9081 47.967 48.0518 49.8431 46.6904 50.8324C44.7553 52.2196 41.9876 53.459 39.805 53.9138C36.666 54.5733 33.3696 54.3914 30.3431 53.4021C28.9255 52.9473 26.5966 51.7534 25.314 50.8324C23.9527 49.8431 22.0963 47.967 21.1175 46.5911C20.2062 45.2949 19.0249 42.9411 18.5749 41.5084C16.606 35.3342 17.9111 28.7392 22.0963 23.7475C25.9328 19.1651 32.222 16.6408 38.0274 17.3799Z\" fill=\"#27282C\" />\r\n                    <path d=\"M33.8871 19.0742C30.2644 19.5404 26.8892 21.2346 24.2453 23.9067C21.8376 26.34 20.2963 29.2737 19.61 32.6848C19.3062 34.2085 19.34 37.6197 19.6662 39.1206C20.42 42.5546 21.8826 45.2949 24.2453 47.6713C26.6754 50.1388 29.6231 51.7079 33.0208 52.3447C34.5734 52.6403 37.4311 52.6403 38.9837 52.3447C42.3814 51.7079 45.3291 50.1388 47.7593 47.6713C50.122 45.2835 51.5958 42.5432 52.3383 39.1206C52.6871 37.506 52.6871 34.0721 52.3383 32.4574C51.5845 29.0121 50.1445 26.3059 47.7593 23.9067C45.3966 21.5075 42.6627 20.018 39.355 19.2902C38.1399 19.0287 35.181 18.915 33.8871 19.0742ZM44.8679 28.7051C45.5654 29.1031 45.9367 29.7399 45.9929 30.6154C46.0267 31.1384 45.9817 31.4454 45.8354 31.7638C45.5767 32.3324 35.3497 42.7479 34.776 43.0208C34.2247 43.2937 33.3584 43.2709 32.7958 42.9753C32.2445 42.691 26.4279 36.801 26.1579 36.2666C25.8879 35.6981 25.9216 34.7543 26.2367 34.1744C26.7992 33.1397 27.913 32.6507 29.0043 32.9464C29.4656 33.0828 29.7919 33.3557 31.682 35.2432L33.8309 37.3923L38.0949 33.0146C42.0102 29.0121 42.4152 28.6369 42.9215 28.4663C43.6078 28.2503 44.2266 28.3299 44.8679 28.7051Z\" fill=\"#27282C\" />\r\n                </svg>}\r\n                svg=\"#99BCFF\"\r\n            />\r\n\r\n\r\n        </Row >\r\n    )\r\n}\r\n\r\nexport default ContactCards;","import React, { useEffect } from \"react\";\r\nimport { Button, Row, Col } from \"react-bootstrap\";\r\nimport CustomButton from \"../../../components/custom-button/custom-button\"\r\n\r\nconst ServiceCreator = (props) => {\r\n    const description_list = props.desc.map((el) => {\r\n        // console.log(el.split(\":\"))\r\n        let title = el.toString().split(\":\")\r\n        let content = (title.length > 1)? <div><span className=\"fw-custom\">{title[0]}: </span><span>{title[1]}</span></div> : el;\r\n        return (\r\n            <li className=\"pb-2\">{content}</li>\r\n        )\r\n    })\r\n    const images = {\r\n        \"web\": require(\"./images/web.webp\"),\r\n        \"uxui\": require(\"./images/uxui.webp\"),\r\n        \"it-support\": require(\"./images/it-support.webp\"),\r\n        \"mobile\": require(\"./images/mobile.webp\")\r\n    }\r\n\r\n    return (\r\n        <Row fluid className=\" d-flex flex-wrap justify-content-center  w-100\"\r\n        //  data-aos-duration=\"700\" data-aos={props.aos} data-aos-delay={props.delay}\r\n         >\r\n\r\n\r\n            <div className=\"accordion col-11 col-lg-12\">\r\n                <div class=\"accordion-item pt-b mt-b\" style={{backgroundColor: props.color}}>\r\n                    <div id=\"collapseOne\" class={\"accordion-collapse collapse\"+ props.show}>\r\n                            <Col  style={{ background: props.bg }} className=\" accordion-body service-card onhover_card my-4 p-0 mx-3 ps-2\" >\r\n\r\n                                <Row>\r\n                                    <Col col={6} xl={6}  className=\" px-4 pb-5 card-items\">\r\n                                        <Row className=\"pt-4 svgs\">\r\n                                            <div className=\"d-flex justify-content-start\">\r\n                                                <svg className=\"m-0 me-2\" width=\"60\" height=\"60\" viewBox=\"0 0 84 84\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                                    <path d=\"M0 30.3999C0 19.759 0 14.4385 2.07087 10.3742C3.89247 6.79911 6.79911 3.89247 10.3742 2.07087C14.4385 0 19.759 0 30.3999 0H53.6001C64.2411 0 69.5616 0 73.6257 2.07087C77.2008 3.89247 80.1075 6.79911 81.9291 10.3742C84 14.4385 84 19.759 84 30.3999V53.6001C84 64.2411 84 69.5616 81.9291 73.6257C80.1075 77.2008 77.2008 80.1075 73.6257 81.9291C69.5616 84 64.2411 84 53.6001 84H30.3999C19.759 84 14.4385 84 10.3742 81.9291C6.79911 80.1075 3.89247 77.2008 2.07087 73.6257C0 69.5616 0 64.2411 0 53.6001V30.3999Z\" fill=\"#330000\" />\r\n                                                    <path d=\"M40.7058 52.7882H27.6891L25.0407 61.2263C24.9672 61.5398 24.6786 61.7618 24.3645 61.7462H17.7715C17.3955 61.7462 17.2641 61.5344 17.3771 61.1105L28.647 27.8207C28.7598 27.4739 28.8726 27.0791 28.9851 26.636C29.1327 25.8647 29.208 25.0811 29.2107 24.2954C29.1783 24.0632 29.3823 23.8581 29.6049 23.8906H38.5647C38.8272 23.8906 38.9772 23.987 39.0153 24.1796L51.807 61.1684C51.9195 61.5539 51.807 61.7465 51.4689 61.7462H44.1432C43.8864 61.7756 43.641 61.5995 43.5798 61.3418L40.7058 52.7882ZM29.7177 45.506H38.6211C37.1583 40.5074 35.5074 35.5745 34.1694 30.5372C32.7258 35.5832 31.1508 40.6088 29.7177 45.506Z\" fill=\"#FF9A00\" />\r\n                                                    <path d=\"M59.413 30.0174C58.8382 30.0411 58.2652 29.94 57.7309 29.721C57.1969 29.502 56.7139 29.1696 56.3137 28.746C55.9147 28.3038 55.6045 27.7854 55.4014 27.2199C55.1983 26.6547 55.1062 26.0538 55.1302 25.4517C55.1098 24.8556 55.2121 24.2619 55.4305 23.7092C55.6492 23.1564 55.9789 22.6572 56.3983 22.244C56.8135 21.8352 57.3037 21.5148 57.8407 21.3016C58.3774 21.0883 58.9501 20.9863 59.5255 21.0015C60.8782 21.0015 61.9393 21.4157 62.7094 22.244C63.0982 22.6745 63.4003 23.1794 63.5986 23.7299C63.7966 24.2802 63.8872 24.8655 63.8644 25.4517C63.8881 26.0559 63.793 26.6592 63.5848 27.225C63.3769 27.7908 63.0598 28.308 62.653 28.746C62.2279 29.1759 61.7203 29.5107 61.1629 29.7297C60.6052 29.9484 60.0094 30.0465 59.413 30.0174ZM55.5247 61.1688V33.543C55.5247 33.1962 55.6744 33.0228 55.9756 33.0228H62.9068C63.2068 33.0228 63.3571 33.1962 63.3574 33.543V61.1688C63.3574 61.5546 63.2071 61.7472 62.9068 61.7469H56.032C55.6939 61.7469 55.5247 61.5543 55.5247 61.1688Z\" fill=\"#FF9A00\" />\r\n                                                </svg>\r\n\r\n                                                <svg className=\"m-0 me-2\" width=\"60\" height=\"60\" viewBox=\"0 0 85 84\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                                    <path d=\"M0.415771 30.3999C0.415771 19.759 0.415771 14.4385 2.48664 10.3742C4.30824 6.79911 7.21488 3.89247 10.79 2.07087C14.8543 0 20.1748 0 30.8157 0H54.0159C64.6569 0 69.9774 0 74.0415 2.07087C77.6166 3.89247 80.5233 6.79911 82.3449 10.3742C84.4158 14.4385 84.4158 19.759 84.4158 30.3999V53.6001C84.4158 64.2411 84.4158 69.5616 82.3449 73.6257C80.5233 77.2008 77.6166 80.1075 74.0415 81.9291C69.9774 84 64.6569 84 54.0159 84H30.8157C20.1748 84 14.8543 84 10.79 81.9291C7.21488 80.1075 4.30824 77.2008 2.48664 73.6257C0.415771 69.5616 0.415771 64.2411 0.415771 53.6001V30.3999Z\" fill=\"#470137\" />\r\n                                                    <path d=\"M44.3555 24.7002L33.8744 42.4434L45.0878 61.2843C45.3209 61.7115 45.0878 61.806 44.75 61.806H36.7484C36.1847 61.806 35.7902 61.7856 35.5649 61.4001C34.8128 59.8974 34.0616 58.4043 33.3107 56.9208C32.5589 55.4379 31.7606 53.9256 30.9161 52.3839C30.0707 50.8434 29.2349 49.2831 28.4084 47.7027C27.6566 49.2441 26.8205 50.7852 26.0135 52.3263C25.2053 53.8677 24.407 55.3992 23.6187 56.9208C22.8298 58.4433 22.0221 59.9556 21.1957 61.4577C21.0451 61.8045 20.7818 61.8402 20.4066 61.8402H12.6868C12.3835 61.8402 12.3469 61.6122 12.5178 61.3422L23.3932 43.0212L12.7994 24.6423C12.607 24.3801 12.7726 24.1008 13.0812 24.1221H21.0265C21.3705 24.1029 21.6746 24.2325 21.8718 24.5268C22.548 26.0682 23.2993 27.6096 24.1257 29.1504C24.9515 30.6918 25.7876 32.214 26.6333 33.7161C27.4787 35.2188 28.3145 36.7407 29.0282 38.2821C29.7791 36.7026 30.5399 35.1615 31.3103 33.6585C32.0801 32.1558 32.8688 30.6435 33.677 29.1216C34.4846 27.6 35.264 26.0877 36.0155 24.5847C36.1154 24.255 36.3542 24.0879 36.6917 24.1221H44.0735C44.3555 24.1221 44.4719 24.507 44.3555 24.7002Z\" fill=\"#FF61F6\" />\r\n                                                    <path d=\"M60.5275 62.5575C55.558 62.6352 50.3527 60.5889 47.7361 56.0556C46.4587 53.8791 45.82 51.1533 45.8203 47.8776C45.799 45.225 46.4599 42.6135 47.7361 40.3065C51.0292 34.4199 57.6634 32.2143 63.9649 32.7933V21.4076C63.9649 21.1385 64.0777 21.003 64.303 21.003H71.4031C71.5972 20.9746 71.7688 21.1507 71.7412 21.3497V55.5066C71.7412 56.9157 71.881 58.32 71.9668 59.7255C71.9806 59.9655 71.8417 60.2031 71.6284 60.3036C68.1205 61.8042 64.3246 62.5401 60.5275 62.5575ZM63.9649 55.3908V39.6129C58.8181 38.1831 53.8213 42.1032 53.8219 47.5308C53.6998 53.1423 58.537 57.0192 63.9649 55.3908Z\" fill=\"#FF61F6\" />\r\n                                                </svg>\r\n\r\n                                                <svg className=\"m-0\" width=\"60\" height=\"60\" viewBox=\"0 0 85 84\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                                    <path d=\"M0.831055 30.3999C0.831055 19.759 0.831055 14.4385 2.90192 10.3742C4.72352 6.79911 7.63016 3.89247 11.2052 2.07087C15.2695 0 20.59 0 31.231 0H54.4312C65.0722 0 70.3927 0 74.4568 2.07087C78.0319 3.89247 80.9386 6.79911 82.7602 10.3742C84.8311 14.4385 84.8311 19.759 84.8311 30.3999V53.6001C84.8311 64.2411 84.8311 69.5616 82.7602 73.6257C80.9386 77.2008 78.0319 80.1075 74.4568 81.9291C70.3927 84 65.0722 84 54.4312 84H31.231C20.59 84 15.2695 84 11.2052 81.9291C7.63016 80.1075 4.72352 77.2008 2.90192 73.6257C0.831055 69.5616 0.831055 64.2411 0.831055 53.6001V30.3999Z\" fill=\"#001E36\" />\r\n                                                    <path d=\"M18.8313 61.5486V24.6102C18.8313 24.3591 18.9363 24.2154 19.1813 24.2154C22.7982 24.2154 26.4135 24 30.0312 24C35.9019 24 42.2583 26.0073 44.4864 32.1486C45.0114 33.6564 45.2913 35.1999 45.2913 36.8154C45.2913 39.9027 44.5914 42.4512 43.1913 44.4615C39.2805 50.0769 32.5023 49.9896 26.4264 49.9896V61.5129C26.4738 61.854 26.1831 62.0154 25.9014 62.0154H19.2513C18.9713 62.0154 18.8313 61.8717 18.8313 61.5486ZM26.4612 31.1436V43.2051C28.8705 43.3815 31.3914 43.4007 33.7062 42.6309C36.2619 41.8935 37.6614 39.6816 37.6614 37.0308C37.7322 34.7721 36.5016 32.6049 34.4064 31.7898C32.1195 30.8388 28.9299 30.7818 26.4612 31.1436Z\" fill=\"#31A8FF\" />\r\n                                                    <path d=\"M67.1215 40.8213C66.0625 40.263 64.9345 39.8547 63.7684 39.6075C62.2702 39.255 56.3608 38.0202 56.3584 41.1102C56.4109 42.8352 59.1493 43.6803 60.3592 44.1732C64.6069 45.6315 69.4135 48.2382 69.319 53.4783C69.4489 60.0015 63.1285 62.6094 57.7108 62.61C54.8905 62.6391 51.9523 62.2023 49.3711 60.9915C49.1245 60.861 48.9661 60.5823 48.9766 60.2979V54.0561C48.9487 53.8059 49.2175 53.5872 49.4275 53.7672C51.9565 55.2966 54.9541 56.0394 57.88 56.079C59.1715 56.079 61.7311 55.9539 61.7119 54.0561C61.7119 52.2351 58.6498 51.3978 57.4291 50.9352C55.6597 50.3037 53.9821 49.4286 52.4422 48.3345C50.29 46.7994 48.94 44.3382 48.9766 41.6304C48.964 35.4882 54.7819 32.7312 60.0214 32.73C62.4706 32.7096 65.101 32.8911 67.381 33.8859C67.7089 33.9822 67.7767 34.3278 67.7755 34.6371V40.4745C67.7962 40.8369 67.3939 40.9602 67.1215 40.8213Z\" fill=\"#31A8FF\" />\r\n                                                </svg>\r\n                                            </div>\r\n                                        </Row>\r\n                                        <div className=\" text-wrap\">\r\n\r\n                                            <h4 className=\"mb-4 mt-5 text-white\">{props.title}</h4>\r\n                                            <div className=\"w-100 d-flex\">\r\n                                                <ul className=\"service-list mb-3 mb-md-5\">\r\n                                                    {description_list}\r\n                                                </ul>\r\n                                            </div>\r\n                                            {/* <p className=\"bg-warning mb-3 mb-md-5 \">Dorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc vulputate libero et velit interdum, ac aliquet odio mattis. Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos. Curabitur tempus urna at turpis condimentum lobortis. Ut commodo efficitur neque. Ut diam quam, semper iaculis condimentum ac, vestibulum eu nisl.</p> */}\r\n                                            <div className=\" d-flex justify-content-start button-parent\">\r\n                                                <CustomButton shadow={props.color} href={props.link} arr={true} text=\"czytaj więcej\" className=\" service-button\" />\r\n                                            </div>\r\n                                        </div>\r\n                                    </Col>\r\n\r\n                                    <Col col={12} xl={6} className=\"img-con d-flex align-items-end p-0 m-0\" style={{ position: \"relative\" }}>\r\n\r\n                                        <img style={{ position: \"absolute\" }} className=\"card-image\" src={images[props.img]} alt=\"\" />\r\n\r\n                                    </Col>\r\n                                </Row>\r\n                            </Col>\r\n\r\n\r\n\r\n                        {/* </div> */}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n\r\n\r\n        </Row>\r\n    )\r\n}\r\nexport default ServiceCreator;\r\n","import React, { createElement, useEffect, useRef, useState } from \"react\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport ServiceCreator from \"./serviceModule\";\r\nimport \"./service.css\";\r\n\r\n\r\nconst hide_elements = () => {\r\n    document.querySelectorAll(\".service-selector\").forEach((el) => {\r\n        el.classList.add(\"hide\")\r\n        el.classList.remove(\"show\")\r\n    })\r\n}\r\n//pokazuje tytuły w odpowiedniej kolejności\r\nconst show_elements = () => {\r\n    const elements = document.querySelectorAll(\".service-selector\")\r\n    setTimeout(() => {\r\n        elements[0].classList.remove(\"hide\")\r\n        elements[0].classList.add(\"show\")\r\n        elements[2].classList.remove(\"hide\")\r\n        elements[2].classList.add(\"show\")\r\n    }, 400)\r\n    setTimeout(() => {\r\n        elements[1].classList.remove(\"hide\")\r\n        elements[1].classList.add(\"show\")\r\n\r\n    }, 300)\r\n}\r\n\r\n\r\nconst Services = ({ lang }) => {\r\n    const maincon = useRef();\r\n    const dupa = useRef();\r\n\r\n    //refs used to display cards \r\n    let tab = [0, 1, 2, 3]\r\n    const big = useRef()\r\n    const small = useRef()\r\n    const single = useRef()\r\n\r\n    const [used_lang] = useState(require(`./lang-services/${lang}.json`));\r\n\r\n    //stan początkowy tytułów(wielkości firmy) i kart z usługami\r\n    const [help_list, set_help_list] = useState([used_lang.titles[1], used_lang.titles[2], used_lang.titles[3]])\r\n    const [display_options, set_options] = useState(\r\n        [\r\n            <h3 role=\"tab\" ref={big} className=\"service-selector opacity-0\" onClick={(event) => { changeServices(1, event) }} >{used_lang.titles[1]}</h3>,\r\n            <h3 role=\"tab\" ref={single} className=\"service-selector opacity-0\" onClick={(event) => { changeServices(3, event) }}>{used_lang.titles[2]}</h3>,\r\n            <h3 role=\"tab\" ref={small} className=\"service-selector opacity-0\" onClick={(event) => { changeServices(2, event) }}>{used_lang.titles[3]}</h3>\r\n        ]\r\n    )\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const [show_services, setShowServices] = useState(<div className=\"main\"></div>)\r\n    const [whichServices, setServices] = useState(3);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    let services_to_show = \"loading...\"\r\n\r\n\r\n    //zmiana kolejności opcji, kilknięta opcja leci na środek\r\n    const change_order = (idx, event) => {\r\n\r\n\r\n\r\n\r\n        setTimeout(() => {\r\n            let content_list = [...help_list]\r\n\r\n            let list_idx = content_list.indexOf(event.target.innerHTML)\r\n\r\n            let tmp = content_list[1]\r\n            content_list[1] = content_list[list_idx]\r\n            content_list[list_idx] = tmp;\r\n            set_help_list(content_list)\r\n\r\n            let options_tab = [...display_options]\r\n            tmp = options_tab[list_idx]\r\n            options_tab[list_idx] = options_tab[1]\r\n            options_tab[1] = tmp;\r\n\r\n            set_options(options_tab)\r\n            document.querySelectorAll(\".service-selector\")[1].classList.add(\"text-decoration-underline\")\r\n        }, 250)\r\n\r\n\r\n\r\n        setServices(idx)\r\n\r\n    }\r\n    //funkcja onclick\r\n    const changeServices = (idx, event) => {\r\n        if (!event.target.classList.contains(\"text-decoration-underline\")) {\r\n\r\n            hide_elements()\r\n            change_order(idx, event)\r\n            show_elements()\r\n        }\r\n\r\n    }\r\n    useEffect(() => {\r\n        document.querySelector(\".main\").classList.remove(\"reload\");\r\n        setTimeout(() => {\r\n            document.querySelector(\".main\").classList.add(\"reload\");\r\n        }, 50)\r\n    }, [show_services])\r\n\r\n    //ładowanie kart przyporządkowanych do rozmiaru firmy\r\n    useEffect(() => {\r\n\r\n        document.querySelectorAll(\".service-selector\").forEach((el) => { el.classList.remove(\"opacity-0\") })\r\n\r\n        //które usługi z listy pokazać zależnie od wyboru usera (w tablicy indeksy usług)\r\n        switch (whichServices) {\r\n            //cases:\r\n            //1 => duże\r\n            //2 => średnie\r\n            //3 => indywidualni\r\n\r\n            //tab elements:\r\n            //0 => uxui\r\n            //1 => strony\r\n            //2 => support\r\n            //3 => mobile\r\n            case 1:\r\n                tab = [2, 3, 0, 1, -1]\r\n                break;\r\n            case 2:\r\n                tab = [2, 3, 0, 1]\r\n                break;\r\n            case 3:\r\n                tab = [2, 3, 0, 1]\r\n                break;\r\n            default:\r\n                tab = [2, 3, 0, 1]\r\n        }\r\n\r\n        services_to_show = used_lang.data.map((el) => {\r\n            let from_left = false;\r\n            from_left = !from_left;\r\n            if (tab.length == 4) {\r\n\r\n                return (\r\n                    <div className=\"w-100 d-flex justify-content-center\">\r\n                    <ServiceCreator\r\n                        key={el.title}\r\n                        aos={(from_left) ? 'fade-left' : \"fade-right\"}\r\n                        title={el.title}\r\n                        show={tab.includes(el.id) ? \" show\" : \" \"}\r\n                        svg={el.svg}\r\n                        img={el.img}\r\n                        bg={el.bg}\r\n                        link={el.link}\r\n                        color={el.color}\r\n                        desc={el.desc}\r\n                    />\r\n                    </div>\r\n                )\r\n            }\r\n            else {\r\n                return (\r\n                    <div className={(el.id == 1)? \"w-100 d-flex justify-content-center invisible \" : \"w-100 d-flex justify-content-center\"}>\r\n\r\n                        <ServiceCreator\r\n                            key={el.title}\r\n                            aos={(from_left) ? 'fade-left' : \"fade-right\"}\r\n                            title={el.title}\r\n                            show={tab.includes(el.id) ? \"mb-0 show\" : \"\"}\r\n                            svg={el.svg}\r\n                            img={el.img}\r\n                            bg={el.bg}\r\n                            link={el.link}\r\n                            color={el.color}\r\n                            desc={el.desc}\r\n                        />\r\n                    </div>\r\n                )\r\n            }\r\n        })\r\n\r\n        setShowServices(<Container fluid className=\"main d-flex flex-wrap justify-content-center\">{services_to_show} </Container>)\r\n    }, [whichServices, used_lang])\r\n    //dodaj podkreślenie do środkowego tytułu i go powiększ\r\n    useEffect(() => {\r\n        document.querySelectorAll(\".service-selector\")[1].classList.add(\"text-decoration-underline\")\r\n    }, [])\r\n    return (\r\n\r\n        <Container key={lang} id=\"ourServices\" fluid className=\"p-0 m-0 pt-3\">\r\n            <div className=\"lower-paleta pb-5 mb-5\">\r\n                <div className=\"anchor\"></div>\r\n                <Container>\r\n                    <Row className=\"mt-5 d-flex align-items-stretch flex-wrap justify-content-center\">\r\n                        <div className=\"mb-5\">\r\n                            <h2 className=\"pt-1 pb-2 fw-semibold fs-1 \" style={{ position: \"relative\", letterSpacing: \".1rem\" }}>{used_lang.titles[0]}</h2>\r\n                            <div className=\"pointer mb-2\" />\r\n                            <p className=\"fs-6 col-12 col-lg-10\">{used_lang.desc}</p>\r\n                        </div>\r\n\r\n                        <Row className=\"text-center mb-5 pb-5  justify-content-center\">\r\n\r\n                            <Col className=\"col-10 col-md-4 my-3\">\r\n                                {display_options[0]}\r\n                            </Col>\r\n\r\n                            <Col className=\"col-10 col-md-4 my-3 text-white\">\r\n                                {display_options[1]}\r\n                            </Col>\r\n\r\n                            <Col className=\"col-10 col-md-4 my-3\">\r\n                                {display_options[2]}\r\n                            </Col>\r\n                            <div className=\"ps-0\">\r\n                                <p className=\"col-12 col-lg-10  text-start pt-5 ps-0 fs-5\">{used_lang.paleteSubtitle[whichServices - 1]}</p>\r\n                            </div>\r\n                        </Row>\r\n\r\n\r\n                        {show_services}\r\n\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n        </Container >\r\n    )\r\n}\r\nexport default Services","import React, { useState } from \"react\";\r\nimport { Col, Container, Row, Button } from \"react-bootstrap\"\r\nimport \"./top.css\"\r\nimport CustomButton from \"../../../components/custom-button/custom-button\";\r\nconst Top = ({ lang }) => {\r\n    return (\r\n        <div className=\"paleta-gora pt-5 \">\r\n            <Container className=\"pt-4\">\r\n                <Row className=\"pt-5\" >\r\n                    <Col className=\"col-12 col-lg-10 zindex-10 pb-3\">\r\n                        <h1 className=\"ubuntu-hard\">\r\n                            {lang[0]}\r\n                        </h1>\r\n                        <p className=\"ubuntu-light\">\r\n                            {lang[1]}\r\n                        </p>\r\n                        <a href=\"#ourServices\">\r\n\r\n                            <CustomButton tabindex={25} arr={true} text={lang[2]} className=\"mt-4 mb-5 px-5 py-0 bg-50px\" />\r\n                        </a>\r\n\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\nexport default Top","import { useEffect } from \"react\";\r\nimport Home from \"./home\";\r\n\r\nconst HomeCode = () => {\r\n    useEffect(() => {\r\n        const pointers = document.querySelectorAll(\"div.pointer\");\r\n        const observer = new IntersectionObserver((entries) => {\r\n            entries.forEach(entry => {\r\n                if (entry.isIntersecting) {\r\n                    entry.target.classList.add(\"pointer-animation\")\r\n                }\r\n                else {\r\n                    entry.target.classList.remove(\"pointer-animation\")\r\n                }\r\n            })\r\n        })\r\n        pointers.forEach(el => { observer.observe(el) })\r\n    }, [])\r\n}\r\nexport default HomeCode\r\n","import { Container } from \"react-bootstrap\";\r\nimport Aps from \"./productModule\";\r\n\r\nimport mateupIcon from \"../../../images/mateup.png\"\r\n\r\nimport mateupImg from \"../../../images/mateup_img.png\"\r\n\r\nexport default function Products({lang}) {\r\n    console.log(lang);\r\n    return (\r\n        <Container fluid className=\"  pt-5 products-con w-100\">\r\n\r\n            <Container className=\"pb-5\">\r\n\r\n                <div className=\"mb-5 pb-2\" >\r\n                    <h3 className=\"pb-2 fw-semibold fs-1\" style={{position: \"relative\", letterSpacing: \".1rem\" }}>Tworzymy również programy, z którymi mozesz <br />zapoznać się poniżej</h3>\r\n                    <div className=\"pointer mb-5\"  />\r\n                </div>\r\n\r\n\r\n                {/* TU DODAJEMY PROJEKTY -> CO I JAK WPISYWAĆ JEST OPISANE W PLIKU ourApps.js !! */}\r\n\r\n                {/* TAGI\r\n                0 -> ASP.NET;\r\n                1 -> React.JS;\r\n\r\n            */}\r\n\r\n                <Aps\r\n                    title='MATEUP'\r\n                    icon={mateupIcon}\r\n                    buttonText=\"przejdź na stronę\"\r\n                    text={lang[0].text}\r\n                    desc={lang[0].desc}\r\n                    bgc='linear-gradient(125deg, #1560D1 0%, #0E3A8D 100%)'\r\n                    img={mateupImg} />\r\n            </Container>\r\n        </Container>\r\n    )\r\n}","import React, { useEffect, useState } from \"react\"\r\nimport ContactCards from \"../whyUs/contact-cards\"\r\nimport Services from \"../services/services\"\r\nimport Top from \"../top/top\"\r\nimport \"./home.css\"\r\nimport HomeCode from \"./home-code\"\r\nimport Products from \"../products/products\"\r\nimport { Container } from \"react-bootstrap\"\r\nconst Home = ({ lang }) => {\r\n    const [used_lang, set_lang] = useState(require(`./home-lang/${lang}.json`));\r\n\r\n    useEffect(() => {\r\n        let current_lang = require(`./home-lang/${lang}.json`)\r\n        set_lang(current_lang)\r\n    })\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        document.title = \"Techsquare | Home\"\r\n        window.scrollTo(0, 0, { duration: 0 })\r\n    }, [])\r\n    //animacje, które wykonują się tylko, gdy są widoczne na ekranie\r\n    HomeCode()\r\n\r\n    return (\r\n        <div style={{ backgroundColor: 'rgba(39, 40, 44, 1)' }}>\r\n            <div className=\"paleta-con\">\r\n                <Top lang={used_lang.top} />\r\n                <Services lang={lang} />\r\n                <Products lang={used_lang.Products} />\r\n                <Container fluid className=\" py-5 bottom-con\">\r\n                    <Container style={{zIndex: \"2\", position: \"relative\"}} className=\"mb-3\">\r\n\r\n\r\n                        <div className=\"mb-5 pb-2 pt-5\" >\r\n                            <h3 className=\"pb-2 fw-semibold fs-1\" style={{ position: \"relative\", letterSpacing: \".1rem\" }}>{used_lang.bottomTitle}</h3>\r\n                            <div className=\"pointer mb-5\" />\r\n                        </div>\r\n                        <ContactCards lang={used_lang.whyUs} />\r\n                    </Container>\r\n                </Container>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Home","var map = {\n\t\"./de.json\": 223,\n\t\"./en.json\": 6046,\n\t\"./pl.json\": 1965\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 6728;","var map = {\n\t\"./de.json\": 363,\n\t\"./en.json\": 4843,\n\t\"./pl.json\": 8318\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 8299;"],"names":["ContactCardModule","_ref","color","title","icon","svg","desc","_jsx","className","children","Col","style","_jsxs","Row","zIndex","position","width","height","viewBox","fill","xmlns","filter","d","id","x","y","filterUnits","result","mode","in","in2","stdDeviation","md","sm","lg","xl","xxl","fontSize","concat","lang","_useState","useState","svg_size","_slicedToArray","content","rx","stroke","transform","props","description_list","map","el","toString","split","length","images","require","fluid","class","backgroundColor","show","background","bg","col","CustomButton","shadow","href","link","arr","text","src","img","alt","tab","useRef","big","small","single","used_lang","_useState3","titles","_useState4","help_list","set_help_list","_useState5","role","ref","onClick","event","changeServices","_useState6","display_options","set_options","_useState7","_useState8","show_services","setShowServices","_useState9","_useState10","whichServices","setServices","services_to_show","idx","target","classList","contains","document","querySelectorAll","forEach","add","remove","setTimeout","content_list","_toConsumableArray","list_idx","indexOf","innerHTML","tmp","options_tab","change_order","elements","show_elements","useEffect","querySelector","data","from_left","ServiceCreator","aos","includes","Container","letterSpacing","paleteSubtitle","tabindex","pointers","observer","IntersectionObserver","entries","entry","isIntersecting","observe","Products","console","log","Aps","mateupIcon","buttonText","bgc","mateupImg","_useState2","set_lang","current_lang","window","scrollTo","duration","HomeCode","Top","top","Services","bottomTitle","ContactCards","whyUs","webpackContext","req","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports"],"sourceRoot":""}